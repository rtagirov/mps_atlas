#!/bin/sh

if [ $# != 3 ]; then
 
   echo expecting 3 arguments: cube, snum, rangl
 
   exit 1
 
fi

cube=$1
snum=$2
rangl=$3

rds=/rds/general/user/rtagirov/ephemeral

base=$rds/runs/atlas

#run=metallicity/$cube/$snum/$rangl
run=metallicity_2/$cube/$snum/$rangl

echo -n "Submitting housekeeping for $run: "

#echo Identifying remaining slices...

declare -i Na Ns Nt Ntm1

declare -i i j

Na=${#rangl}

if [[ "$rangl" = *10* ]]; then Na=Na-1; fi

Ns=512

rem_slices=' '

for ((i=0; i<$Na; i++)); do

    j=i+1

    mu=${rangl:$i:1}

    mu_next=${rangl:$j:1}

    if [ $mu = 1 ]; then

        if [ $mu_next = 0 ]; then

            mu=10

        fi

    fi

#    if [ $mu = 1 ]; then mu=10; fi

    for slice in $(seq 1 $Ns); do

        if [ ! -f $base/$run/spec/$mu.$slice ]; then

            rem_slices=$rem_slices' '$mu.$slice

        fi

    done

done

rem_slices_arr=($rem_slices)

Nt=${#rem_slices_arr[@]}

if ((Nt == 0)); then echo     $Nt remaining slices.;     exit 0; fi
if ((Nt != 0)); then echo -n "$Nt remaining slices -> ";         fi

remlog=$base/$run/rem_slices.log

rm -f $remlog

#echo Compiling the list of remaining slices...

for ((i=0; i<$Nt; i++)); do

    echo ${rem_slices_arr[i]} >> $remlog

done

atm=$cube/$snum

ldo=$rds/logs/atlas/$run/hk/out
lde=$rds/logs/atlas/$run/hk/err

slog=$base/$run/success.hk.log
flog=$base/$run/fail.hk.log
spec=$base/$run/spec

mkdir -p $ldo $lde

#echo -n removing old logs...

rm -f $slog
rm -f $flog
rm -f $ldo/*
rm -f $lde/*

#IFS='/' read -r -a array <<< "$run"

name=h:${cube:0:5}/$snum/$rangl

walltime=24:00:00

qsub -v \
run=$run,\
atm=$atm,\
slog=$slog,\
flog=$flog,\
spec=$spec,\
rem_slices="$rem_slices" \
-J 1-$Nt:1 \
-o $ldo \
-e $lde \
-N $name \
-lwalltime=$walltime \
-lselect=1:ncpus=1:mem=2gb:avx2=true atlas_calc_slice_spec_hk_m
